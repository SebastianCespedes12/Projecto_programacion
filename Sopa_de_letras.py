import random  
import tkinter
from tkinter import messagebox

def menu_principal():
  def nivel_dificultad(n): #Se declara la funcion nivel_dificultad con el parametro n
    global dificultad #Se declara la variable global dificultad
    dificultad = n    #Se asigna a la variable global dificultad el valor de n
  ventana_menu = tkinter.Tk()  #Se crea una ventana
  ventana_menu.title("Dificultad") #Se le asigna un titulo a la ventana
  ventana_menu.geometry("400x400") #Se le asigna un tamaño a la ventana
  etiqueta = tkinter.Label(ventana_menu, text="Seleccione dificultad", font=("Arial", 20)) #Se crea una etiqueta y se le asigna un texto y un tamaño de letra
  etiqueta.pack() #Se pone la etiqueta en la ventana
  boton_facil = tkinter.Button(ventana_menu, text="1. Facil 10x10 ", command=lambda: (ventana_menu.destroy(), nivel_dificultad(10))) #Se crea un boton y se le asigna la funcion nivel_dificultad con el parametro 10
  boton_facil.pack(pady=20) #Se pone el boton en la ventana
  boton_medio = tkinter.Button(ventana_menu, text="2. Medio 15x15", command=lambda:(ventana_menu.destroy(), nivel_dificultad(15)))  
  boton_medio.pack(pady=20)
  boton_dificil = tkinter.Button(ventana_menu, text="3. Dificil 30x30", command=lambda: ((ventana_menu.destroy(), nivel_dificultad(30))))
  boton_dificil.pack(pady=20)
  ventana_menu.mainloop() 
  return dificultad #Se retorna la variable global dificultad

def modos_de_juego():  
  ventana_modos = tkinter.Tk() #Se crea una ventana
  ventana_modos.title("Modos de juego") #Se le asigna un titulo a la ventana
  ventana_modos.geometry("400x400")  #Se le asigna un tamaño a la ventana
  
  # Variable to store the user's choice
  eleccion_usuario = [] #Se crea una lista vacia para almacenar la eleccion del usuario

  etiqueta = tkinter.Label(ventana_modos, text="Desea añadir palabras o jugar con las palabras predeterminadas?", font=("Arial", 20))
  etiqueta.pack()
  
  def en_añadir():  
    eleccion_usuario.append("añadir") #Se añade a la lista la palabra "añadir"
    ventana_modos.destroy() #Se cierra la ventana

  def en_predeterminado(): 
    eleccion_usuario.append("predeterminado") #Se añade a la lista la palabra "predeterminado"
    ventana_modos.destroy() #Se cierra la ventana
   
  boton_añadir = tkinter.Button(ventana_modos, text="1. Añadir palabras", command=en_añadir) #Se crea un boton y se le asigna la funcion en_añadir
  boton_añadir.pack(pady=30)

  boton_predeterminado = tkinter.Button(ventana_modos, text="2. Palabras predeterminadas", command=en_predeterminado) #Se crea un boton y se le asigna la funcion en_predeterminado
  boton_predeterminado.pack(pady=30)
  
  ventana_modos.mainloop()
  if "añadir" in eleccion_usuario: #Si la palabra "añadir" esta en la lista eleccion_usuario
    return True    #Se retorna True
  elif "predeterminado" in eleccion_usuario: #Si la palabra "predeterminado" esta en la lista eleccion_usuario
    return False   #Se retorna False
  
def añadir_palabras(Tamaño_matriz):
  def agregar_palabra(): 
    palabra = Entrada_añadir.get() #Se obtiene la palabra ingresada por el usuario
    if len(palabra) > 0: #Si la cadena no esta vacia
      palabras.append(palabra) #Se añade la palabra a la lista de palabras
      Entrada_añadir.delete(0, tkinter.END) #Se borra la palabra ingresada por el usuario
  def finalizar():
    if len(palabras) >= Tamaño_matriz: #Si la cantidad de palabras ingresadas es mayor o igual al tamaño de la matriz
      ventana_añadir.destroy() #  Se cierra la ventana
    else: #Si la cantidad de palabras ingresadas es menor al tamaño de la matriz
      tkinter.messagebox.showwarning("Error", f"Debe ingresar al menos {Tamaño_matriz} palabras.")  #Se muestra un mensaje de error

  palabras = [] #Se crea una lista vacia para almacenar las palabras
  ventana_añadir = tkinter.Tk() 
  ventana_añadir.geometry("400x400")
  ventana_añadir.title("Añadir Palabras")
  Etiqueta_añadir = tkinter.Label(ventana_añadir, text=f"Ingrese {Tamaño_matriz} palabras:", font=("Arial", 14))
  Etiqueta_añadir.pack(pady=20)
  Entrada_añadir = tkinter.Entry(ventana_añadir, font=("Arial", 14)) #Se crea una entrada para que el usuario ingrese la palabra
  Entrada_añadir.pack(pady=10)
  boton_agregar = tkinter.Button(ventana_añadir, text="Agregar", command=agregar_palabra) #Se crea un boton y se le asigna la funcion agregar_palabra
  boton_agregar.pack(pady=10)
  boton_finalizar = tkinter.Button(ventana_añadir, text="Finalizar", command=finalizar) #Se crea un boton y se le asigna la funcion finalizar
  boton_finalizar.pack(pady=10)
  ventana_añadir.mainloop()
  return palabras # Se retorna la lista de palabras

def mostrar_matriz(matriz, ventana, matriz_label, opcion): 
  for i in range(len(matriz)): #Se recorre la matriz
    fila = matriz[i] #Se asigna a fila la fila i de la matriz
    for j in range(len(fila)): #Se recorre la fila
      letra = fila[j] #Se asigna a letra la letra de la fila j
      if opcion == 1: #Si la opcion es 1
        Etiqueta = tkinter.Label(ventana, text=letra, font=("Courier", 20), width=2, borderwidth=1, bg="white", relief="solid") #Se crea una etiqueta con la letra
      elif opcion == 2: #Si la opcion es 2
        Etiqueta = tkinter.Label(ventana, text=letra, font=("Courier", 15), width=2, borderwidth=1, bg="white", relief="solid") #Se crea una etiqueta con la letra
      elif opcion == 3: #Si la opcion es 3
        Etiqueta = tkinter.Label(ventana, text=letra, font=("Courier", 10), width=2, borderwidth=1, bg="white", relief="solid") #Se crea una etiqueta con la letra
      Etiqueta.grid(row=i, column=j, padx=1, pady=1) #Se pone la etiqueta en la ventana
      matriz_label[(i, j)] = Etiqueta # Guardamos las posiciones en el diccionario

def cuenta_atras(texto, tiempo, ventana):
  while tiempo >= 0: #Mientras el tiempo sea mayor o igual a 0
    minutos = tiempo // 60 #Se divide el tiempo entre 60 y se asigna a minutos
    segundos = tiempo % 60 #Se saca el residuo de la division del tiempo entre 60 y se asigna a segundos
    texto.config(text=f"{minutos:02}:{segundos:02}") #Se asigna al texto el valor de minutos y segundos en formato de 2 digitos
    texto.update() #Se actualiza el texto
    tiempo -= 1 #Se resta 1 al tiempo
    texto.after(1000)  #Se espera 1 segundo
  messagebox.showinfo("Perdiste", "Se acabo el tiempo") #Se muestra un mensaje de que se acabo el tiempo si el tiempo llega a 0
  ventana.after(2000, ventana.destroy) #Se cierra la ventana despues de 2 segundos

def verificar_palabra(consola,dentro,puntaje_label, puntos, ventana, matriz_label, posiciones):
  palabra = consola.get().upper() #Se obtiene la palabra ingresada por el usuario y se convierte a mayusculas
  if palabra in dentro: #Si la palabra esta en la lista de palabras dentro
    dentro.remove(palabra)	#Se remueve la palabra de la lista de palabras dentro
    messagebox.showinfo("Correcto", "Palabra correcta") #Se muestra un mensaje de que la palabra es correcta
    puntos[0] += puntaje(len(palabra)) #Se suma el puntaje de acuerdo a la longitud de la palabra al puntaje total
    for pos in posiciones[palabra]: #Se recorre la lista de posiciones de la palabra
        matriz_label[pos].config(bg="light blue") # Cambia de color las letras encontradas
  else: #Si la palabra no esta en la lista de palabras dentro
    messagebox.showinfo("Error", "Palabra incorrecta")  #Se muestra un mensaje de que la palabra es incorrecta
  consola.delete(0, tkinter.END) #Se borra la palabra ingresada por el usuario
  puntaje_label.config(text=f"Puntaje: {puntos[0]}", font=("Arial", 30)) #Se actualiza el puntaje
  if len(dentro)==0: #Si la lista de palabras dentro esta vacia
    messagebox.showinfo("Felicidades", "Encontraste todas las palabras") #Se muestra un mensaje de que se encontraron todas las palabras
    ventana.after(2000, ventana.destroy) #Se cierra la ventana despues de 2 segundos

def puntaje(longitud): 
  if longitud >= 20: #Si la longitud de la palabra es mayor o igual a 20
   return 60 #Se retorna 60
  elif longitud >= 15: #Si la longitud de la palabra es mayor o igual a 15
    return 50 #Se retorna 50
  elif longitud >= 10:
    return 40
  elif longitud >= 4:
   return 30
  else:
    return 20

def crear_ventana(tiempo, dentro, matriz, posiciones, opcion):
  puntos = [0] #Se crea una lista con un entero 0
  ventana = tkinter.Tk() #Se crea una ventana
  ventana.title("Sopa de letras")
  matriz_label = {} #Se crea un diccionario vacio
  

  mostrar_matriz(matriz, ventana, matriz_label,opcion) #Se muestra la matriz en la ventana

  texto = tkinter.Label(ventana, text="", font=("Arial", 48)) #Se crea un texto vacio
  texto.grid(row=len(matriz) + 1, columnspan=len(matriz)) #Se pone el texto en la ventana

  consola = tkinter.Entry(ventana, font=("Arial", 25)) #Se crea una entrada para que el usuario ingrese la palabra
  consola.grid(row=len(matriz) + 2, columnspan=len(matriz)) #Se pone la entrada en la ventana

  etiqueta_puntaje = tkinter.Label(ventana, text="Puntaje: 0", font=("Arial", 30)) #Se crea una etiqueta con el puntaje
  etiqueta_puntaje.grid(row=len(matriz) + 3, columnspan=len(matriz)) #Se pone el puntaje en la ventana

  boton_consola = tkinter.Button(ventana, text="SUBIR", command=lambda: verificar_palabra(consola, dentro, etiqueta_puntaje, puntos, ventana, matriz_label, posiciones)) #Se crea un boton y se le asigna la funcion verificar_palabra
  boton_consola.grid(row=len(matriz) + 4, columnspan=len(matriz)) #Se pone el boton en la ventana

  boton_cerrar = tkinter.Button(ventana, text="SALIR", command=ventana.destroy) #Se crea un boton y se le asigna la funcion de cerrar la ventana
  boton_cerrar.grid(row=len(matriz) + 5, columnspan=len(matriz)) #Se pone el boton en la ventana

  cuenta_atras(texto, tiempo, ventana) #Se llama a la funcion cuenta_atras con los parametros texto, tiempo y ventana
  ventana.mainloop() 

def crear_matriz(n: int) -> list:
    # Crea una matriz n x n donde cada elemento es una cadena vacía
    return [["" for i in range(n)] for i in range(n)]

def filtrar(a: list)->dict:
  A ={} #Se crea un diccionario vacio
  for cadena in a: #Se recorre la lista de palabras
    ctn = len(cadena) #Se asigna a ctn la longitud de la palabra
    if ctn in A: #Si la longitud de la palabra esta en el diccionario
       A[ctn].append(cadena.upper()) #Se añade la palabra a la lista de palabras de esa longitud
    if ctn not in A: # Si la longitud de la palabra no esta en el diccionario
      A[ctn] = [cadena.upper()] #Se añade la longitud de la palabra al diccionario y se añade la palabra a la lista de palabras de esa longitud
  return A  

def verf_vacios_hor(A:list,x:int,y:int,d:int) ->bool: #Se añaden los parametros de la matriz, la fila, la columna y la longitud de la palabra
  Vacios = False  #Se asigna a Vacios el valor de False
  for i in range(y,y+d): #Se recorre la fila por la longitud de la palabra
    if A[x][i] != "": #Si la matriz en la fila x y la columna i es diferente a una cadena vacia
      Vacios=True  #Se asigna a Vacios el valor de True y se rompe el ciclo
      break
  return Vacios

def verf_vacios_ver(A:list,x:int,y:int,d:int)->bool:
  Vacios = False #Se asigna a Vacios el valor de False
  for i in range(x,x+d): #Se recorre la columna por la longitud de la palabra
    if A[i][y] != "": #Si la matriz en la fila i y la columna y es diferente a una cadena vacia
      Vacios=True  #Se asigna a Vacios el valor de True y se rompe el ciclo
      break
  return Vacios 

def verf_vacios_diag(A:list,x:int,y:int,d:int)->bool:
  Vacios = False #Se asigna a Vacios el valor de False
  for i in range(x,x+d): #Se recorre la columna por la longitud de la palabra
    for j in range(y,y+d): #Se recorre la fila por la longitud de la palabra
      if i-j == x-y: #Si la resta de i-j es igual a la resta de x-y
        if A[i][j] != "": #Si la matriz en la fila i y la columna j es diferente a una cadena vacia
          Vacios=True #Se asigna a Vacios el valor de True y se rompe el ciclo
          break
  return Vacios

def añadir_palabra_horz(A:list,s:str,fila:int,columna:int)->list: #Se añaden como parametros la matriz, la palabra, la fila y la columna
    i = fila #Se asigna a i el valor de la fila, ya que la fila no cambia
    pos = []
    for k in range(columna,columna + len(s)):  #Se recorre la palabra y la fila.
        A[i][k] = s[k-columna] #Se asigna a la matriz la letra de la palabra en la posicion k-columna
        pos.append((i, k)) #Se añade la posicion a la lista de posiciones
    posiciones[s] = pos
    return A

def añadir_palabra_ver(A:list,s:str,fila:int,columna:int)->list:
  i = columna #Se asigna a i el valor de la columna, ya que la columna no cambia
  pos = []
  for k in range(fila,fila + len(s)):  #Se recorre la palabra y la columna.
    A[k][i] = s[k - fila] #Se asigna a la matriz la letra de la palabra en la posicion k-fila
    pos.append((k, i)) #Se añade la posicion a la lista de posiciones
  posiciones[s] = pos
  return A  

def añadir_palabra_diag(A:list,s:str,fila:int,columna:int)->list:
  pos = []
  for i in range(fila,fila+len(s)): #Se recorre la palabra y la fila
    for j in range(columna,columna+len(s)): #Se recorre la palabra y la columna
      if i-j == fila-columna: #Si la resta de i-j es igual a la resta de fila-columna
        A[i][j]=s.upper()[i-fila] #Se asigna a la matriz la letra de la palabra en la posicion i-fila
        pos.append((i, j)) #Se añade la posicion a la lista de posiciones
  posiciones[s] = pos
  return A

def palabra_horizontal(A:list,tamaño_mtr:int,palabras:int,filtradas:dict,dentro:list):
  coordenada_x = random.randint(0,tamaño_mtr-3) #Se selecciona una coordenada x aleatoria
  coordenada_y = random.randint(0,tamaño_mtr-3) #Se selecciona una coordenada y aleatoria

  distancia_x = tamaño_mtr - coordenada_y  #Se calcula la distancia en x hasta el final de la fila
  N_letras = random.randint(3,distancia_x) #Se selecciona un numero aleatorio de letras entre 3 y la distancia en x
  Vacio = verf_vacios_hor(A,coordenada_x,coordenada_y,N_letras) #Se verifica si hay espacio para añadir la palabra   
  if Vacio == False and (filtradas.get(N_letras) != None): #Si hay espacio y la lista de palabras filtradas no esta vacia  
    if len(filtradas.get(N_letras)) > 0:
      Palabra_seleccionada = random.choice(filtradas.get(N_letras)) #Se selecciona una palabra aleatoria
      dentro.append(Palabra_seleccionada) #Se añade la palabra a la lista de palabras dentro
      filtradas.get(N_letras).remove(Palabra_seleccionada) #Se remueve la palabra de la lista de palabras filtradas
      añadir_palabra_horz(A,Palabra_seleccionada,coordenada_x,coordenada_y) #Se añade la palabra a la matriz usando como parametros la matriz, la palabra, la fila y la columna  
      palabras-=1 #Se resta 1 a la cantidad de palabras que se van a añadir a la matriz
  return A, palabras, filtradas, dentro

def palabra_vertical(A:list,tamaño_mtr:int,palabras:int,filtradas:dict,dentro:list): 
  coordenada_x = random.randint(0,tamaño_mtr-3) #Se selecciona una coordenada x aleatoria
  coordenada_y = random.randint(0,tamaño_mtr-3) #Se selecciona una coordenada y aleatoria

  distancia_y= tamaño_mtr-coordenada_x #Se calcula la distancia en y hasta el final de la columna
  N_letras= random.randint(3,distancia_y) #Se selecciona un numero aleatorio de letras entre 3 y la distancia en y
  Vacio = verf_vacios_ver(A,coordenada_x,coordenada_y,N_letras) #Se verifica si hay espacio para añadir la palabra
  if Vacio == False and (filtradas.get(N_letras) != None): #Si hay espacio y la lista de palabras filtradas no esta vacia
    if len(filtradas.get(N_letras)) > 0 :
      Palabra_seleccionada = random.choice(filtradas.get(N_letras)) #Se selecciona una palabra aleatoria
      dentro.append(Palabra_seleccionada) #Se añade la palabra a la lista de palabras dentro
      (Palabra_seleccionada) #Se añade la palabra a la lista de palabras dentro
      filtradas.get(N_letras).remove(Palabra_seleccionada) #Se remueve la palabra de la lista de palabras filtradas
      añadir_palabra_ver(A,Palabra_seleccionada,coordenada_x,coordenada_y) #Se añade la palabra a la matriz usando como parametros la matriz, la palabra, la fila y la columna 
      palabras-=1 #Se resta 1 a la cantidad de palabras que se van a añadir a la matriz
  return A, palabras, filtradas, dentro

def palabra_diagonal(A:list,tamaño_mtr:int,palabras:int,filtradas:dict,dentro:list):
  coordenada_x = random.randint(0,tamaño_mtr-3) #Se selecciona una coordenada x aleatoria
  coordenada_y = random.randint(0,tamaño_mtr-3) #Se selecciona una coordenada y aleatoria
  
  distancia_x = tamaño_mtr - coordenada_y #Se calcula la distancia en x hasta el final de la fila
  distancia_y = tamaño_mtr - coordenada_x #Se calcula la distancia en y hasta el final de la columna
  distancia_diag =  min(distancia_x,distancia_y) #Se calcula la distancia en y hasta el final de la fila o columna
  N_letras= random.randint(3,distancia_diag) #Se selecciona un numero aleatorio de letras entre 3 y la distancia diagonal
  
  Vacio = verf_vacios_diag(A,coordenada_x,coordenada_y,N_letras) #Se verifica si hay espacio para añadir la palabra
  if Vacio == False and (filtradas.get(N_letras) != None): #Si hay espacio y la lista de palabras filtradas no esta vacia:
    if len(filtradas.get(N_letras)) > 0 :  
      Palabra_seleccionada = random.choice(filtradas.get(N_letras)) #Se selecciona una palabra aleatoria
      dentro.append(Palabra_seleccionada) #Se añade la palabra a la lista de palabras dentro
      filtradas.get(N_letras).remove(Palabra_seleccionada) #Se remueve la palabra de la lista de palabras filtradas
      añadir_palabra_diag(A,Palabra_seleccionada,coordenada_x,coordenada_y) #Se añade la palabra a la matriz usando como parametros la matriz, la palabra, la fila y la columna         
      palabras-=1 #Se resta 1 a la cantidad de palabras que se van a añadir a la matriz
  return A, palabras, filtradas, dentro

      
if __name__ == "__main__":
  Todas_las_palabras = [
    "abaco",
    "abdomen",
    "abeja",
    "abierto",
    "abogado",
    "abono",
    "aborto",
    "abrazo",
    "abrir",
    "abuelo",
    "abuso",
    "acabar",
    "academia",
    "acceso",
    "accion",
    "aceite",
    "acelga",
    "acento",
    "aceptar",
    "acido",
    "aclarar",
    "acne",
    "acoger",
    "acoso",
    "activo",
    "acto",
    "actriz",
    "actuar",
    "acudir",
    "acuerdo",
    "acusar",
    "adicto",
    "admitir",
    "adoptar",
    "adorno",
    "aduana",
    "adulto",
    "aereo",
    "afectar",
    "aficion",
    "afinar",
    "afirmar",
    "agil",
    "agitar",
    "agonua",
    "agosto",
    "agotar",
    "agregar",
    "agrio",
    "agua",
    "agudo",
    "aguila",
    "aguja",
    "ahogo",
    "ahorro",
    "aire",
    "aislar",
    "ajedrez",
    "ajeno",
    "ajuste",
    "alacran",
    "alambre",
    "alarma",
    "alba",
    "album",
    "alcalde",
    "aldea",
    "alegre",
    "alejar",
    "alerta",
    "aleta",
    "alfiler",
    "alga",
    "algodon",
    "aliado",
    "aliento",
    "alivio",
    "alma",
    "almeja",
    "almibar",
    "altar",
    "alteza",
    "altivo",
    "alto",
    "altura",
    "alumno",
    "alzar",
    "amable",
    "amante",
    "amapola",
    "amargo",
    "amasar",
    "ambar",
    "ambito",
    "ameno",
    "amigo",
    "amistad",
    "amor",
    "amparo",
    "amplio",
    "ancho",
    "anciano",
    "ancla",
    "andar",
    "anden",
    "anemia",
    "angulo",
    "anillo",
    "animo",
    "anis",
    "anotar",
    "antena",
    "antiguo",
    "antojo",
    "anual",
    "anular",
    "anuncio",
    "añadir",
    "añejo",
    "año",
    "apagar",
    "aparato",
    "apetito",
    "apio",
    "aplicar",
    "apodo",
    "aporte",
    "apoyo",
    "aprender",
    "aprobar",
    "apuesta",
    "apuro",
    "arado",
    "araña",
    "arar",
    "arbitro",
    "arbol",
    "arbusto",
    "archivo",
    "arco",
    "arder",
    "ardilla",
    "arduo",
    "area",
    "arido",
    "aries",
    "armonia",
    "arnes",
    "aroma",
    "arpa",
    "arpon",
    "arreglo",
    "arroz",
    "arruga",
    "arte",
    "artista",
    "asa",
    "asado",
    "asalto",
    "ascenso",
    "asegurar",
    "aseo",
    "asesor",
    "asiento",
    "asilo",
    "asistir",
    "asno",
    "asombro",
    "aspero",
    "astilla",
    "astro",
    "astuto",
    "asumir",
    "asunto",
    "atajo",
    "ataque",
    "atar",
    "atento",
    "ateo",
    "atico",
    "atleta",
    "atomo",
    "atraer",
    "atroz",
    "atun",
    "audaz",
    "audio",
    "auge",
    "aula",
    "aumento",
    "ausente",
    "autor",
    "aval",
    "avance",
    "avaro",
    "ave",
    "avellana",
    "avena",
    "avestruz",
    "avion",
    "aviso",
    "ayer",
    "ayuda",
    "ayuno",
    "azafran",
    "azar",
    "azote",
    "azucar",
    "azufre",
    "azul",
    "baba",
    "babor",
    "bache",
    "bahia",
    "baile",
    "bajar",
    "balanza",
    "balcon",
    "balde",
    "bambu",
    "banco",
    "banda",
    "baño",
    "barba",
    "barco",
    "barniz",
    "barro",
    "bascula",
    "baston",
    "basura",
    "batalla",
    "bateria",
    "batir",
    "batuta",
    "baul",
    "bazar",
    "bebe",
    "bebida",
    "bello",
    "besar",
    "beso",
    "bestia",
    "bicho",
    "bien",
    "bingo",
    "blanco",
    "bloque",
    "blusa",
    "boa",
    "bobina",
    "bobo",
    "boca",
    "bocina",
    "boda",
    "bodega",
    "boina",
    "bola",
    "bolero",
    "bolsa",
    "bomba",
    "bondad",
    "bonito",
    "bono",
    "bonsai",
    "borde",
    "borrar",
    "bosque",
    "bote",
    "botin",
    "boveda",
    "bozal",
    "bravo",
    "brazo",
    "brecha",
    "breve",
    "brillo",
    "brinco",
    "brisa",
    "broca",
    "broma",
    "bronce",
    "brote",
    "bruja",
    "brusco",
    "bruto",
    "buceo",
    "bucle",
    "bueno",
    "buey",
    "bufanda",
    "bufon",
    "buho",
    "buitre",
    "bulto",
    "burbuja",
    "burla",
    "burro",
    "buscar",
    "butaca",
    "buzon",
    "caballo",
    "cabeza",
    "cabina",
    "cabra",
    "cacao",
    "cadaver",
    "cadena",
    "caer",
    "cafe",
    "caida",
    "caiman",
    "caja",
    "cajon",
    "cal",
    "calamar",
    "calcio",
    "caldo",
    "calidad",
    "calle",
    "calma",
    "calor",
    "calvo",
    "cama",
    "cambio",
    "camello",
    "camino",
    "campo",
    "cancer",
    "candil",
    "canela",
    "canguro",
    "canica",
    "canto",
    "caña",
    "cañon",
    "caoba",
    "caos",
    "capaz",
    "capitan",
    "capote",
    "captar",
    "capucha",
    "cara",
    "carbon",
    "carcel",
    "careta",
    "carga",
    "cariño",
    "carne",
    "carpeta",
    "carro",
    "carta",
    "casa",
    "casco",
    "casero",
    "caspa",
    "castor",
    "catorce",
    "catre",
    "caudal",
    "causa",
    "cazo",
    "cebolla",
    "ceder",
    "cedro",
    "celda",
    "celebre",
    "celoso",
    "celula",
    "cemento",
    "ceniza",
    "centro",
    "cerca",
    "cerdo",
    "cereza",
    "cero",
    "cerrar",
    "certeza",
    "cesped",
    "cetro",
    "chacal",
    "chaleco",
    "champu",
    "chancla",
    "chapa",
    "charla",
    "chico",
    "chiste",
    "chivo",
    "choque",
    "choza",
    "chuleta",
    "chupar",
    "ciclon",
    "ciego",
    "cielo",
    "cien",
    "cierto",
    "cifra",
    "cigarro",
    "cima",
    "cinco",
    "cine",
    "cinta",
    "cipres",
    "circo",
    "ciruela",
    "cisne",
    "cita",
    "ciudad",
    "clamor",
    "clan",
    "claro",
    "clase",
    "clave",
    "cliente",
    "clima",
    "clinica",
    "cobre",
    "coccion",
    "cochino",
    "cocina",
    "coco",
    "codigo",
    "codo",
    "cofre",
    "coger",
    "cohete",
    "cojin",
    "cojo",
    "cola",
    "colcha",
    "colegio",
    "colgar",
    "colina",
    "collar",
    "colmo",
    "columna",
    "combate",
    "comer",
    "comida",
    "comodo",
    "compra",
    "conde",
    "conejo",
    "conga",
    "conocer",
    "consejo",
    "contar",
    "copa",
    "copia",
    "corazon",
    "corbata",
    "corcho",
    "cordon",
    "corona",
    "correr",
    "coser",
    "cosmos",
    "costa",
    "craneo",
    "crater",
    "crear",
    "crecer",
    "creido",
    "crema",
    "cria",
    "crimen",
    "cripta",
    "crisis",
    "cromo",
    "cronica",
    "croqueta",
    "crudo",
    "cruz",
    "cuadro",
    "cuarto",
    "cuatro",
    "cubo",
    "cubrir",
    "cuchara",
    "cuello",
    "cuento",
    "cuerda",
    "cuesta",
    "cueva",
    "cuidar",
    "culebra",
    "culpa",
    "culto",
    "cumbre",
    "cumplir",
    "cuna",
    "cuneta",
    "cuota",
    "cupon",
    "cupula",
    "curar",
    "curioso",
    "curso",
    "curva",
    "cutis",
    "dama",
    "danza",
    "dar",
    "dardo",
    "datil",
    "deber",
    "debil",
    "decada",
    "decir",
    "dedo",
    "defensa",
    "definir",
    "dejar",
    "delfin",
    "delgado",
    "delito",
    "demora",
    "denso",
    "dental",
    "deporte",
    "derecho",
    "derrota",
    "desayuno",
    "deseo",
    "desfile",
    "desnudo",
    "destino",
    "desvio",
    "detalle",
    "detener",
    "deuda",
    "dia",
    "diablo",
    "diadema",
    "diamante",
    "diana",
    "diario",
    "dibujo",
    "dictar",
    "diente",
    "dieta",
    "diez",
    "dificil",
    "digno",
    "dilema",
    "diluir",
    "dinero",
    "directo",
    "dirigir",
    "disco",
    "diseño",
    "disfraz",
    "diva",
    "divino",
    "doble",
    "doce",
    "dolor",
    "domingo",
    "don",
    "donar",
    "dorado",
    "dormir",
    "dorso",
    "dos",
    "dosis",
    "dragon",
    "droga",
    "ducha",
    "duda",
    "duelo",
    "dueño",
    "dulce",
    "duo",
    "duque",
    "durar",
    "dureza",
    "duro",
    "ebano",
    "ebrio",
    "echar",
    "eco",
    "ecuador",
    "edad",
    "edicion",
    "edificio",
    "editor",
    "educar",
    "efecto",
    "eficaz",
    "eje",
    "ejemplo",
    "elefante",
    "elegir",
    "elemento",
    "elevar",
    "elipse",
    "elite",
    "elixir",
    "elogio",
    "eludir",
    "embudo",
    "emitir",
    "emocion",
    "empate",
    "empeño",
    "empleo",
    "empresa",
    "enano",
    "encargo",
    "enchufe",
    "encia",
    "enemigo",
    "enero",
    "enfado",
    "enfermo",
    "engaño",
    "enigma",
    "enlace",
    "enorme",
    "enredo",
    "ensayo",
    "enseñar",
    "entero",
    "entrar",
    "envase",
    "envio",
    "epoca",
    "equipo",
    "erizo",
    "escala",
    "escena",
    "escolar",
    "escribir",
    "escudo",
    "esencia",
    "esfera",
    "esfuerzo",
    "espada",
    "espejo",
    "espia",
    "esposa",
    "espuma",
    "esqui",
    "estar",
    "este",
    "estilo",
    "estufa",
    "etapa",
    "eterno",
    "etica",
    "etnia",
    "evadir",
    "evaluar",
    "evento",
    "evitar",
    "exacto",
    "examen",
    "exceso",
    "excusa",
    "exento",
    "exigir",
    "exilio",
    "existir",
    "exito",
    "experto",
    "explicar",
    "exponer",
    "extremo",
    "fabrica",
    "fabula",
    "fachada",
    "facil",
    "factor",
    "faena",
    "faja",
    "falda",
    "fallo",
    "falso",
    "faltar",
    "fama",
    "familia",
    "famoso",
    "faraon",
    "farmacia",
    "farol",
    "farsa",
    "fase",
    "fatiga",
    "fauna",
    "favor",
    "fax",
    "febrero",
    "fecha",
    "feliz",
    "feo",
    "feria",
    "feroz",
    "fertil",
    "fervor",
    "festin",
    "fiable",
    "fianza",
    "fiar",
    "fibra",
    "ficcion",
    "ficha",
    "fideo",
    "fiebre",
    "fiel",
    "fiera",
    "fiesta",
    "figura",
    "fijar",
    "fijo",
    "fila",
    "filete",
    "filial",
    "filtro",
    "fin",
    "finca",
    "fingir",
    "finito",
    "firma",
    "flaco",
    "flauta",
    "flecha",
    "flor",
    "flota",
    "fluir",
    "flujo",
    "fluor",
    "fobia",
    "foca",
    "fogata",
    "fogon",
    "folio",
    "folleto",
    "fondo",
    "forma",
    "forro",
    "fortuna",
    "forzar",
    "fosa",
    "foto",
    "fracaso",
    "fragil",
    "franja",
    "frase",
    "fraude",
    "freir",
    "freno",
    "fresa",
    "frio",
    "frito",
    "fruta",
    "fuego",
    "fuente",
    "fuerza",
    "fuga",
    "fumar",
    "funcion",
    "funda",
    "furgon",
    "furia",
    "fusil",
    "futbol",
    "futuro",
    "gacela",
    "gafas",
    "gaita",
    "gajo",
    "gala",
    "galeria",
    "gallo",
    "gamba",
    "ganar",
    "gancho",
    "ganga",
    "ganso",
    "garaje",
    "garza",
    "gasolina",
    "gastar",
    "gato",
    "gavilan",
    "gemelo",
    "gemir",
    "gen",
    "genero",
    "genio",
    "gente",
    "geranio",
    "gerente",
    "germen",
    "gesto",
    "gigante",
    "gimnasio",
    "girar",
    "giro",
    "glaciar",
    "globo",
    "gloria",
    "gol",
    "golfo",
    "goloso",
    "golpe",
    "goma",
    "gordo",
    "gorila",
    "gorra",
    "gota",
    "goteo",
    "gozar",
    "grada",
    "grafico",
    "grano",
    "grasa",
    "gratis",
    "grave",
    "grieta",
    "grillo",
    "gripe",
    "gris",
    "grito",
    "grosor",
    "grua",
    "grueso",
    "grumo",
    "grupo",
    "guante",
    "guapo",
    "guardia",
    "guerra",
    "guia",
    "guiño",
    "guion",
    "guiso",
    "guitarra",
    "gusano",
    "gustar",
    "haber",
    "habil",
    "hablar",
    "hacer",
    "hacha",
    "hada",
    "hallar",
    "hamaca",
    "harina",
    "haz",
    "hazaña",
    "hebilla",
    "hebra",
    "hecho",
    "helado",
    "helio",
    "hembra",
    "herir",
    "hermano",
    "heroe",
    "hervir",
    "hielo",
    "hierro",
    "higado",
    "higiene",
    "hijo",
    "himno",
    "historia",
    "hocico",
    "hogar",
    "hoguera",
    "hoja",
    "hombre",
    "hongo",
    "honor",
    "honra",
    "hora",
    "hormiga",
    "horno",
    "hostil",
    "hoyo",
    "hueco",
    "huelga",
    "huerta",
    "hueso",
    "huevo",
    "huida",
    "huir",
    "humano",
    "humedo",
    "humilde",
    "humo",
    "hundir",
    "huracan",
    "hurto",
    "icono",
    "ideal",
    "idioma",
    "idolo",
    "iglesia",
    "iglu",
    "igual",
    "ilegal",
    "ilusion",
    "imagen",
    "iman",
    "imitar",
    "impar",
    "imperio",
    "imponer",
    "impulso",
    "incapaz",
    "indice",
    "inerte",
    "infiel",
    "informe",
    "ingenio",
    "inicio",
    "inmenso",
    "inmune",
    "innato",
    "insecto",
    "instante",
    "interes",
    "intimo",
    "intuir",
    "inutil",
    "invierno",
    "ira",
    "iris",
    "ironia",
    "isla",
    "islote",
    "jabali",
    "jabon",
    "jamon",
    "jarabe",
    "jardin",
    "jarra",
    "jaula",
    "jazmin",
    "jefe",
    "jeringa",
    "jinete",
    "jornada",
    "joroba",
    "joven",
    "joya",
    "juerga",
    "jueves",
    "juez",
    "jugador",
    "jugo",
    "juguete",
    "juicio",
    "junco",
    "jungla",
    "junio",
    "juntar",
    "jupiter",
    "jurar",
    "justo",
    "juvenil",
    "juzgar",
    "kilo",
    "koala",
    "labio",
    "lacio",
    "lacra",
    "lado",
    "ladron",
    "lagarto",
    "lagrima",
    "laguna",
    "laico",
    "lamer",
    "lamina",
    "lampara",
    "lana",
    "lancha",
    "langosta",
    "lanza",
    "lapiz",
    "largo",
    "larva",
    "lastima",
    "lata",
    "latex",
    "latir",
    "laurel",
    "lavar",
    "lazo",
    "leal",
    "leccion",
    "leche",
    "lector",
    "leer",
    "legion",
    "legumbre",
    "lejano",
    "lengua",
    "lento",
    "leña",
    "leon",
    "leopardo",
    "lesion",
    "letal",
    "letra",
    "leve",
    "leyenda",
    "libertad",
    "libro",
    "licor",
    "lider",
    "lidiar",
    "lienzo",
    "liga",
    "ligero",
    "lima",
    "limite",
    "limon",
    "limpio",
    "lince",
    "lindo",
    "linea",
    "lingote",
    "lino",
    "linterna",
    "liquido",
    "liso",
    "lista",
    "litera",
    "litio",
    "litro",
    "llaga",
    "llama",
    "llanto",
    "llave",
    "llegar",
    "llenar",
    "llevar",
    "llorar",
    "llover",
    "lluvia",
    "lobo",
    "locion",
    "loco",
    "locura",
    "logica",
    "logro",
    "lombriz",
    "lomo",
    "lonja",
    "lote",
    "lucha",
    "lucir",
    "lugar",
    "lujo",
    "luna",
    "lunes",
    "lupa",
    "lustro",
    "luto",
    "luz",
    "maceta",
    "macho",
    "madera",
    "madre",
    "maduro",
    "maestro",
    "mafia",
    "magia",
    "mago",
    "maiz",
    "maldad",
    "maleta",
    "malla",
    "malo",
    "mama",
    "mambo",
    "mamut",
    "manco",
    "mando",
    "manejar",
    "manga",
    "maniqui",
    "manjar",
    "mano",
    "manso",
    "manta",
    "mañana",
    "mapa",
    "maquina",
    "mar",
    "marco",
    "marea",
    "marfil",
    "margen",
    "marido",
    "marmol",
    "marron",
    "martes",
    "marzo",
    "masa",
    "mascara",
    "masivo",
    "matar",
    "materia",
    "matiz",
    "matriz",
    "maximo",
    "mayor",
    "mazorca",
    "mecha",
    "medalla",
    "medio",
    "medula",
    "mejilla",
    "mejor",
    "melena",
    "melon",
    "memoria",
    "menor",
    "mensaje",
    "mente",
    "menu",
    "mercado",
    "merengue",
    "merito",
    "mes",
    "meson",
    "meta",
    "meter",
    "metodo",
    "metro",
    "mezcla",
    "miedo",
    "miel",
    "miembro",
    "miga",
    "mil",
    "milagro",
    "militar",
    "millon",
    "mimo",
    "mina",
    "minero",
    "minimo",
    "minuto",
    "miope",
    "mirar",
    "misa",
    "miseria",
    "misil",
    "mismo",
    "mitad",
    "mito",
    "mochila",
    "mocion",
    "moda",
    "modelo",
    "moho",
    "mojar",
    "molde",
    "moler",
    "molino",
    "momento",
    "momia",
    "monarca",
    "moneda",
    "monja",
    "monto",
    "moño",
    "morada",
    "morder",
    "moreno",
    "morir",
    "morro",
    "morsa",
    "mortal",
    "mosca",
    "mostrar",
    "motivo",
    "mover",
    "movil",
    "mozo",
    "mucho",
    "mudar",
    "mueble",
    "muela",
    "muerte",
    "muestra",
    "mugre",
    "mujer",
    "mula",
    "muleta",
    "multa",
    "mundo",
    "muñeca",
    "mural",
    "muro",
    "musculo",
    "museo",
    "musgo",
    "musica",
    "muslo",
    "nacar",
    "nacion",
    "nadar",
    "naipe",
    "naranja",
    "nariz",
    "narrar",
    "nasal",
    "natal",
    "nativo",
    "natural",
    "nausea",
    "naval",
    "nave",
    "navidad",
    "necio",
    "nectar",
    "negar",
    "negocio",
    "negro",
    "neon",
    "nervio",
    "neto",
    "neutro",
    "nevar",
    "nevera",
    "nicho",
    "nido",
    "niebla",
    "nieto",
    "niñez",
    "niño",
    "nitido",
    "nivel",
    "nobleza",
    "noche",
    "nomina",
    "noria",
    "norma",
    "norte",
    "nota",
    "noticia",
    "novato",
    "novela",
    "novio",
    "nube",
    "nuca",
    "nucleo",
    "nudillo",
    "nudo",
    "nuera",
    "nueve",
    "nuez",
    "nulo",
    "numero",
    "nutria",
    "oasis",
    "obeso",
    "obispo",
    "objeto",
    "obra",
    "obrero",
    "observar",
    "obtener",
    "obvio",
    "oca",
    "ocaso",
    "oceano",
    "ochenta",
    "ocho",
    "ocio",
    "ocre",
    "octavo",
    "octubre",
    "oculto",
    "ocupar",
    "ocurrir",
    "odiar",
    "odio",
    "odisea",
    "oeste",
    "ofensa",
    "oferta",
    "oficio",
    "ofrecer",
    "ogro",
    "oido",
    "oir",
    "ojo",
    "ola",
    "oleada",
    "olfato",
    "olivo",
    "olla",
    "olmo",
    "olor",
    "olvido",
    "ombligo",
    "onda",
    "onza",
    "opaco",
    "opcion",
    "opera",
    "opinar",
    "oponer",
    "optar",
    "optica",
    "opuesto",
    "oracion",
    "orador",
    "oral",
    "orbita",
    "orca",
    "orden",
    "oreja",
    "organo",
    "orgia",
    "orgullo",
    "oriente",
    "origen",
    "orilla",
    "oro",
    "orquesta",
    "oruga",
    "osadia",
    "oscuro",
    "osezno",
    "oso",
    "ostra",
    "otoño",
    "otro",
    "oveja",
    "ovulo",
    "oxido",
    "oxigeno",
    "oyente",
    "ozono",
    "pacto",
    "padre",
    "paella",
    "pagina",
    "pago",
    "pais",
    "pajaro",
    "palabra",
    "palco",
    "paleta",
    "palido",
    "palma",
    "paloma",
    "palpar",
    "pan",
    "panal",
    "panico",
    "pantera",
    "pañuelo",
    "papa",
    "papel",
    "papilla",
    "paquete",
    "parar",
    "parcela",
    "pared",
    "parir",
    "paro",
    "parpado",
    "parque",
    "parrafo",
    "parte",
    "pasar",
    "paseo",
    "pasion",
    "paso",
    "pasta",
    "pata",
    "patio",
    "patria",
    "pausa",
    "pauta",
    "pavo",
    "payaso",
    "peaton",
    "pecado",
    "pecera",
    "pecho",
    "pedal",
    "pedir",
    "pegar",
    "peine",
    "pelar",
    "peldaño",
    "pelea",
    "peligro",
    "pellejo",
    "pelo",
    "peluca",
    "pena",
    "pensar",
    "peñon",
    "peon",
    "peor",
    "pepino",
    "pequeño",
    "pera",
    "percha",
    "perder",
    "pereza",
    "perfil",
    "perico",
    "perla",
    "permiso",
    "perro",
    "persona",
    "pesa",
    "pesca",
    "pesimo",
    "pestaña",
    "petalo",
    "petroleo",
    "pez",
    "pezuña",
    "picar",
    "pichon",
    "pie",
    "piedra",
    "pierna",
    "pieza",
    "pijama",
    "pilar",
    "piloto",
    "pimienta",
    "pino",
    "pintor",
    "pinza",
    "piña",
    "piojo",
    "pipa",
    "pirata",
    "pisar",
    "piscina",
    "piso",
    "pista",
    "piton",
    "pizca",
    "placa",
    "plan",
    "plata",
    "playa",
    "plaza",
    "pleito",
    "pleno",
    "plomo",
    "pluma",
    "plural",
    "pobre",
    "poco",
    "poder",
    "podio",
    "poema",
    "poesia",
    "poeta",
    "polen",
    "policia",
    "pollo",
    "polvo",
    "pomada",
    "pomelo",
    "pomo",
    "pompa",
    "poner",
    "porcion",
    "portal",
    "posada",
    "poseer",
    "posible",
    "poste",
    "potencia",
    "potro",
    "pozo",
    "prado",
    "precoz",
    "pregunta",
    "premio",
    "prensa",
    "preso",
    "previo",
    "primo",
    "principe",
    "prision",
    "privar",
    "proa",
    "probar",
    "proceso",
    "producto",
    "proeza",
    "profesor",
    "programa",
    "prole",
    "promesa",
    "pronto",
    "propio",
    "proximo",
    "prueba",
    "publico",
    "puchero",
    "pudor",
    "pueblo",
    "puerta",
    "puesto",
    "pulga",
    "pulir",
    "pulmon",
    "pulpo",
    "pulso",
    "puma",
    "punto",
    "puñal",
    "puño",
    "pupa",
    "pupila",
    "pure",
    "quedar",
    "queja",
    "quemar",
    "querer",
    "queso",
    "quieto",
    "quimica",
    "quince",
    "quitar",
    "rabano",
    "rabia",
    "rabo",
    "racion",
    "radical",
    "raiz",
    "rama",
    "rampa",
    "rancho",
    "rango",
    "rapaz",
    "rapido",
    "rapto",
    "rasgo",
    "raspa",
    "rato",
    "rayo",
    "raza",
    "razon",
    "reaccion",
    "realidad",
    "rebaño",
    "rebote",
    "recaer",
    "receta",
    "rechazo",
    "recoger",
    "recreo",
    "recto",
    "recurso",
    "red",
    "redondo",
    "reducir",
    "reflejo",
    "reforma",
    "refran",
    "refugio",
    "regalo",
    "regir",
    "regla",
    "regreso",
    "rehen",
    "reino",
    "reir",
    "reja",
    "relato",
    "relevo",
    "relieve",
    "relleno",
    "reloj",
    "remar",
    "remedio",
    "remo",
    "rencor",
    "rendir",
    "renta",
    "reparto",
    "repetir",
    "reposo",
    "reptil",
    "res",
    "rescate",
    "resina",
    "respeto",
    "resto",
    "resumen",
    "retiro",
    "retorno",
    "retrato",
    "reunir",
    "reves",
    "revista",
    "rey",
    "rezar",
    "rico",
    "riego",
    "rienda",
    "riesgo",
    "rifa",
    "rigido",
    "rigor",
    "rincon",
    "riñon",
    "rio",
    "riqueza",
    "risa",
    "ritmo",
    "rito",
    "rizo",
    "roble",
    "roce",
    "rociar",
    "rodar",
    "rodeo",
    "rodilla",
    "roer",
    "rojizo",
    "rojo",
    "romero",
    "romper",
    "ron",
    "ronco",
    "ronda",
    "ropa",
    "ropero",
    "rosa",
    "rosca",
    "rostro",
    "rotar",
    "rubi",
    "rubor",
    "rudo",
    "rueda",
    "rugir",
    "ruido",
    "ruina",
    "ruleta",
    "rulo",
    "rumbo",
    "rumor",
    "ruptura",
    "ruta",
    "rutina",
    "sabado",
    "saber",
    "sabio",
    "sable",
    "sacar",
    "sagaz",
    "sagrado",
    "sala",
    "saldo",
    "salero",
    "salir",
    "salmon",
    "salon",
    "salsa",
    "salto",
    "salud",
    "salvar",
    "samba",
    "sancion",
    "sandia",
    "sanear",
    "sangre",
    "sanidad",
    "sano",
    "santo",
    "sapo",
    "saque",
    "sardina",
    "sarten",
    "sastre",
    "satan",
    "sauna",
    "saxofon",
    "seccion",
    "seco",
    "secreto",
    "secta",
    "sed",
    "seguir",
    "seis",
    "sello",
    "selva",
    "semana",
    "semilla",
    "senda",
    "sensor",
    "señal",
    "señor",
    "separar",
    "sepia",
    "sequia",
    "ser",
    "serie",
    "sermon",
    "servir",
    "sesenta",
    "sesion",
    "seta",
    "setenta",
    "severo",
    "sexo",
    "sexto",
    "sidra",
    "siesta",
    "siete",
    "siglo",
    "signo",
    "silaba",
    "silbar",
    "silencio",
    "silla",
    "simbolo",
    "simio",
    "sirena",
    "sistema",
    "sitio",
    "situar",
    "sobre",
    "socio",
    "sodio",
    "sol",
    "solapa",
    "soldado",
    "soledad",
    "solido",
    "soltar",
    "solucion",
    "sombra",
    "sondeo",
    "sonido",
    "sonoro",
    "sonrisa",
    "sopa",
    "soplar",
    "soporte",
    "sordo",
    "sorpresa",
    "sorteo",
    "sosten",
    "sotano",
    "suave",
    "subir",
    "suceso",
    "sudor",
    "suegra",
    "suelo",
    "sueño",
    "suerte",
    "sufrir",
    "sujeto",
    "sultan",
    "sumar",
    "superar",
    "suplir",
    "suponer",
    "supremo",
    "sur",
    "surco",
    "sureño",
    "surgir",
    "susto",
    "sutil",
    "tabaco",
    "tabique",
    "tabla",
    "tabu",
    "taco",
    "tacto",
    "tajo",
    "talar",
    "talco",
    "talento",
    "talla",
    "talon",
    "tamaño",
    "tambor",
    "tango",
    "tanque",
    "tapa",
    "tapete",
    "tapia",
    "tapon",
    "taquilla",
    "tarde",
    "tarea",
    "tarifa",
    "tarjeta",
    "tarot",
    "tarro",
    "tarta",
    "tatuaje",
    "tauro",
    "taza",
    "tazon",
    "teatro",
    "techo",
    "tecla",
    "tecnica",
    "tejado",
    "tejer",
    "tejido",
    "tela",
    "telefono",
    "tema",
    "temor",
    "templo",
    "tenaz",
    "tender",
    "tener",
    "tenis",
    "tenso",
    "teoria",
    "terapia",
    "terco",
    "termino",
    "ternura",
    "terror",
    "tesis",
    "tesoro",
    "testigo",
    "tetera",
    "texto",
    "tez",
    "tibio",
    "tiburon",
    "tiempo",
    "tienda",
    "tierra",
    "tieso",
    "tigre",
    "tijera",
    "tilde",
    "timbre",
    "timido",
    "timo",
    "tinta",
    "tio",
    "tipico",
    "tipo",
    "tira",
    "tiron",
    "titan",
    "titere",
    "titulo",
    "tiza",
    "toalla",
    "tobillo",
    "tocar",
    "tocino",
    "todo",
    "toga",
    "toldo",
    "tomar",
    "tono",
    "tonto",
    "topar",
    "tope",
    "toque",
    "torax",
    "torero",
    "tormenta",
    "torneo",
    "toro",
    "torpedo",
    "torre",
    "torso",
    "tortuga",
    "tos",
    "tosco",
    "toser",
    "toxico",
    "trabajo",
    "tractor",
    "traer",
    "trafico",
    "trago",
    "traje",
    "tramo",
    "trance",
    "trato",
    "trauma",
    "trazar",
    "trebol",
    "tregua",
    "treinta",
    "tren",
    "trepar",
    "tres",
    "tribu",
    "trigo",
    "tripa",
    "triste",
    "triunfo",
    "trofeo",
    "trompa",
    "tronco",
    "tropa",
    "trote",
    "trozo",
    "truco",
    "trueno",
    "trufa",
    "tuberia",
    "tubo",
    "tuerto",
    "tumba",
    "tumor",
    "tunel",
    "tunica",
    "turbina",
    "turismo",
    "turno",
    "tutor",
    "ubicar",
    "ulcera",
    "umbral",
    "unidad",
    "unir",
    "universo",
    "uno",
    "untar",
    "uña",
    "urbano",
    "urbe",
    "urgente",
    "urna",
    "usar",
    "usuario",
    "util",
    "utopia",
    "uva",
    "vaca",
    "vacio",
    "vacuna",
    "vagar",
    "vago",
    "vaina",
    "vajilla",
    "vale",
    "valido",
    "valle",
    "valor",
    "valvula",
    "vampiro",
    "vara",
    "variar",
    "varon",
    "vaso",
    "vecino",
    "vector",
    "vehiculo",
    "veinte",
    "vejez",
    "vela",
    "velero",
    "veloz",
    "vena",
    "vencer",
    "venda",
    "veneno",
    "vengar",
    "venir",
    "venta",
    "venus",
    "ver",
    "verano",
    "verbo",
    "verde",
    "vereda",
    "verja",
    "verso",
    "verter",
    "via",
    "viaje",
    "vibrar",
    "vicio",
    "victima",
    "vida",
    "video",
    "vidrio",
    "viejo",
    "viernes",
    "vigor",
    "vil",
    "villa",
    "vinagre",
    "vino",
    "viñedo",
    "violin",
    "viral",
    "virgo",
    "virtud",
    "visor",
    "vispera",
    "vista",
    "vitamina",
    "viudo",
    "vivaz",
    "vivero",
    "vivir",
    "vivo",
    "volcan",
    "volumen",
    "volver",
    "voraz",
    "votar",
    "voto",
    "voz",
    "vuelo",
    "vulgar",
    "yacer",
    "yate",
    "yegua",
    "yema",
    "yerno",
    "yeso",
    "yodo",
    "yoga",
    "yogur",
    "zafiro",
    "zanja",
    "zapato",
    "zarza",
    "zona",
    "zorro",
    "zumo",
    "zurdo"
  ]
  
  #Usuario selecciona nivel de dificultad 
  Tamaño_matriz= menu_principal() 
  Dificultad = Tamaño_matriz//10
  A = crear_matriz(Tamaño_matriz) #Se crea la matriz dependiendo de la dificultad seleccionada por el usuario
  
  #Se seleccionan la cantidad de palabras que se van a añadir a la matriz
  Cantidad_de_palabras :int = Tamaño_matriz // 2

  if Tamaño_matriz == 30:
    tiempo_inicial = 480
  elif Tamaño_matriz == 15:
    tiempo_inicial = 360
  elif Tamaño_matriz == 10:
    tiempo_inicial = 180
  
  posiciones = {}
  
  #Se crea una lista vacia para guardar las palabras que se añaden a la matriz final
  Palabras_dentro = []


  if modos_de_juego() == False: # Si el usuario selecciona la opcion de jugar con palabras predefinidas
    #Se crea un diccionario con las palabras filtradas
    Palabras_filtradas :dict = filtrar(Todas_las_palabras)
    #Se añaden las palabras a la matriz
    while Cantidad_de_palabras > 0: #Mientras la cantidad de palabras sea mayor a 0
      Opciones = random.randint(1,3)  #Se selecciona una opcion aleatoria
      if Opciones == 1: #Si la opcion es 1, la palabra se añade horizontalmente
        #Se asignan los valores de la funcion palabra_horizontal a las variables A, Cantidad_de_palabras, Palabras_filtradas y Palabras_dentro
        (A,Cantidad_de_palabras, Palabras_filtradas, Palabras_dentro) = palabra_horizontal(A,Tamaño_matriz,Cantidad_de_palabras,Palabras_filtradas,Palabras_dentro) 

      elif Opciones == 2: #Si la opcion es 2, la palabra se añade verticalmente
        #Se asignan los valores de la funcion palabra_vertical a las variables A, Cantidad_de_palabras, Palabras_filtradas y Palabras_dentro
        (A,Cantidad_de_palabras, Palabras_filtradas, Palabras_dentro) = palabra_vertical(A,Tamaño_matriz,Cantidad_de_palabras,Palabras_filtradas,Palabras_dentro) 

      else: #Se añade una palabra digonalmente
        #Se asignan los valores de la funcion palabra_diagonal a las variables A, Cantidad_de_palabras, Palabras_filtradas y Palabras_dentro
        (A,Cantidad_de_palabras, Palabras_filtradas, Palabras_dentro) = palabra_diagonal(A,Tamaño_matriz,Cantidad_de_palabras,Palabras_filtradas,Palabras_dentro) 
    #Se remplazan letras aleatorias por los espacios vacios
    for i in range(len(A)): #Se recorren las filas
      for j in range(len(A[i])): #Se recorren las columnas
        if A[i][j] == "" : #Si la matriz en la fila i y la columna j es igual a una cadena vacia
          A[i][j] = chr(random.randint(65,90)) #Se selecciona una letra aleatoria de el codigo ASCII de las mayusculas y se añade a la matriz
    crear_ventana(tiempo_inicial, Palabras_dentro, A,posiciones,Dificultad)
  
  else: #Si el usuario selecciona la opcion de jugar con palabras añadidas por elE
    Todas_las_palabras = añadir_palabras(Tamaño_matriz)
    #Se crea un diccionario con las palabras filtradas
    Palabras_filtradas :dict = filtrar(Todas_las_palabras)
    #Se añaden las palabras a la matriz
    while Cantidad_de_palabras > 0: #Mientras la cantidad de palabras sea mayor a 0
      Opciones = random.randint(1,3)  #Se selecciona una opcion aleatoria
      if Opciones == 1: #Si la opcion es 1, la palabra se añade horizontalmente
        #Se asignan los valores de la funcion palabra_horizontal a las variables A, Cantidad_de_palabras, Palabras_filtradas y Palabras_dentro
        (A,Cantidad_de_palabras, Palabras_filtradas, Palabras_dentro) = palabra_horizontal(A,Tamaño_matriz,Cantidad_de_palabras,Palabras_filtradas,Palabras_dentro) 

      elif Opciones == 2: #Si la opcion es 2, la palabra se añade verticalmente
        #Se asignan los valores de la funcion palabra_vertical a las variables A, Cantidad_de_palabras, Palabras_filtradas y Palabras_dentro
        (A,Cantidad_de_palabras, Palabras_filtradas, Palabras_dentro) = palabra_vertical(A,Tamaño_matriz,Cantidad_de_palabras,Palabras_filtradas,Palabras_dentro) 
        do = 1

      else: #Se añade una palabra digonalmente
        #Se asignan los valores de la funcion palabra_diagonal a las variables A, Cantidad_de_palabras, Palabras_filtradas y Palabras_dentro
        (A,Cantidad_de_palabras, Palabras_filtradas, Palabras_dentro) = palabra_diagonal(A,Tamaño_matriz,Cantidad_de_palabras,Palabras_filtradas,Palabras_dentro) 
    #Se remplazan letras aleatorias por los espacios vacios
    for i in range(len(A)): #Se recorren las filas
      for j in range(len(A[i])): #Se recorren las columnas
        if A[i][j] == "" : #Si la matriz en la fila i y la columna j es igual a una cadena vacia
          A[i][j] = chr(random.randint(65,90)) #Se selecciona una letra aleatoria de el codigo ASCII de las mayusculas y se añade a la matriz
    crear_ventana(tiempo_inicial, Palabras_dentro, A,posiciones,Dificultad)
